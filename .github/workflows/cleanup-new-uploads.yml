name: Cleanup Stale Temp Uploads

on:
  schedule:
    # Run daily at 03:00 UTC
    - cron: "0 3 * * *"
  workflow_dispatch:
    inputs:
      ttl:
        description: "TTL in hours"
        required: false
        default: "24"
      dry_run:
        description: "Dry run (true/false)"
        required: false
        default: "false"
      buckets:
        description: "Comma-separated buckets (e.g., collab-logos or project-logos,collab-logos)"
        required: false
        default: ""
      min_age_min:
        description: "Minimum file age in minutes (extra safety; defaults to 10)"
        required: false
        default: "10"

jobs:
  cleanup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Validate env (secrets or variables)
        shell: bash
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL != '' && secrets.NEXT_PUBLIC_SUPABASE_URL || vars.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY != '' && secrets.SUPABASE_SERVICE_ROLE_KEY || vars.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          if [[ -z "$NEXT_PUBLIC_SUPABASE_URL" ]]; then
            echo "::error::NEXT_PUBLIC_SUPABASE_URL is not set as a Secret or Variable" && exit 1
          fi
          if [[ -z "$SUPABASE_SERVICE_ROLE_KEY" ]]; then
            echo "::error::SUPABASE_SERVICE_ROLE_KEY is not set as a Secret or Variable" && exit 1
          fi

      - name: Run cleanup script
        shell: bash
        run: |
          CMD="pnpm dlx tsx scripts/cleanup-new-uploads.ts --ttl=${{ inputs.ttl || '24' }} --dry-run=${{ inputs.dry_run || 'false' }} --min-age-min=${{ inputs.min_age_min || '10' }}"
          if [[ -n "${{ inputs.buckets }}" ]]; then
            CMD="$CMD --buckets=${{ inputs.buckets }}"
          fi
          echo "> $CMD"
          eval "$CMD"
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL != '' && secrets.NEXT_PUBLIC_SUPABASE_URL || vars.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY != '' && secrets.SUPABASE_SERVICE_ROLE_KEY || vars.SUPABASE_SERVICE_ROLE_KEY }}


